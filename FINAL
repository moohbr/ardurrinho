#define ENA 10
#define IN1 9
#define IN2 8

#define IN3 7
#define IN4 6
#define ENB 5

#define echoPin1 11
#define trigPin1 12

#define echoPin2 4
#define trigPin2 3

void setup() {
  // put your setup code here, to run once:
  
  pinMode(ENA,OUTPUT);
  pinMode(IN1,OUTPUT);
  pinMode(IN2,OUTPUT);
  
  pinMode(ENB,OUTPUT);
  pinMode(IN3,OUTPUT);
  pinMode(IN4,OUTPUT);
  
  pinMode(echoPin1, INPUT);
  pinMode(trigPin1, OUTPUT);

  pinMode(echoPin2, INPUT);
  pinMode(trigPin2, OUTPUT);

}

void para(){

  analogWrite(ENA,0);
  analogWrite(ENB,0);
  
  digitalWrite(IN1,LOW);
  digitalWrite(IN2,LOW);
  
}

void esquerda(){

  analogWrite(ENA,255);
  analogWrite(ENB,0);
  
  digitalWrite(IN1,HIGH);
  digitalWrite(IN2,LOW);
  
}

void direita(){

  analogWrite(ENA,0);
  analogWrite(ENB,100);
  
  digitalWrite(IN3,HIGH);
  digitalWrite(IN4,LOW);
  
}

void distancia1(){

digitalWrite(trigPin1,LOW);
delayMicroseconds(2);
digitalWrite(trigPin1,HIGH);
delayMicroseconds(10);
digitalWrite(trigPin1,LOW);
long duration1 = pulseIn(echoPin1,HIGH);
duration1 = (duration1)/58;

}

void distancia2(){

digitalWrite(trigPin2,LOW);
delayMicroseconds(2);
digitalWrite(trigPin2,HIGH);
delayMicroseconds(10);
digitalWrite(trigPin2,LOW);
long duration2 = pulseIn(echoPin2,HIGH);
duration2 = (duration2)/58;

}

void escolhe()
{
  if ((duration1<50)&&(duration2<50)) // Se tiver perto dos dois sensores
  {
    escolhedor = 00; // para
  }
  if ((duration1<50)&&(duration2>50)) // Se tiver perto do sensor 1
  {
    escolhedor = 01; // vira a direita 
  }
  if ((duration1>50)&&(duration2<50)) // Se tiver perto do sensor 2
  {
    escolhedor = 10; // vira a esquerda
  }
  if ((duration1>50)&&(duration2>50)) // Nenhum sensor perto
  {
    escolhedor = 11; // Segue em frente
  }
}


    
}

void loop() {
  // put your main code here, to run repeatedly:
  distancia1();
  distancia2();
  escolhe();
  switch (escolhedor) // de acordo com o numero recebido na função escolhe, toma-se a decisão, indicando os passos do motor.
 {
   case 00:
   para();
   break;
   
   case 01:
   direita();
   break;
   
   case 10:
   esquerda();
   break;
   
   case 11:
   frente();
   break;
 }
}
