void pulsa_sensor1(){
  digitalWrite(PINO_TRIGGER_SENSOR1, HIGH);   // Ativa o pino 7, triggando o sensor 1
  delayMicroseconds(10);                      // Ativa o delay necessario para o sensor reconhecer o trigger ATENÇÃO: VERIFICAR SE A INTERRUPÇÃO ESTA ATIVA
  digitalWrite(PINO_TRIGGER_SENSOR1, LOW);    // Desativa o pino 7, destriggando o sensor 1 
}

void pulsa_sensor2(){
  digitalWrite(PINO_TRIGGER_SENSOR2, HIGH);   // Ativa o pino 4, triggando o sensor 1
  delayMicroseconds(10);                      // Ativa o delay necessario para o sensor reconhecer o trigger ATENÇÃO: VERIFICAR SE A INTERRUPÇÃO ESTA ATIVA
  digitalWrite(PINO_TRIGGER_SENSOR2, LOW);    // Desativa o pino 4, destriggando o sensor 1 
}

void borda_sensor1(){ 
  borda1 = digitalRead(PINO_ECHO_SENSOR1); // Ler o pino ECHO
  if ((borda1ant == 0) && (borda1 == 1)){  // Se ouve borda de subida
    borda1ant = borda1;                    // Salva que ouve borda de subida
    conta1;                                // Conta o tON de ECHO
  else
    if (borda1ant == 1) && (borda1 == 0)){ // Se ouve borda de descida
      calcula1;                            // Calcula o tON de echo
    }
  }
}

void borda_sensor2()
  borda2 = digitalRead(PINO_ECHO_SENSOR2);
  if ((borda2ant == 0) && (borda2 == 1)){
    borda2ant = borda2;
    conta2;
  else
    if (borda2ant == 1) && (borda2 == 0)){
      calcula2;      
    }
  }
}

void calcula1(){

}

void calcula2(){

}

void setup() {
    
}

void loop() {

    
    
}
